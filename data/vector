var tracts = ui.Map.FeatureViewLayer("projects/nasa-eej/assets/tract_featureview",null,"Tracts",false);
var highlighting = ee.FeatureCollection("projects/nasa-eej/assets/tract_for_webtool");

var legend_style = require("users/dawnschumacher/nasa-eej:style/legend-style")

var var1 = ["None", "Degree of Greenness", "Land Surface Temperature"]
var var2 = ["None", "Displacement Risk", "Social Vulnerability", "Housing Price Trend"]

var color_pal = [
  ['1_3', '#f73593'],
  ['2_3', '#a53593'],
  ['3_3', '#403593'],
  ['1_2', '#f78fb6'],
  ['2_2', '#a58fb6'],
  ['3_2', '#408fa7'],
  ['1_1', '#f7fcf5'],
  ['2_1', '#a5e8cd'],
  ['3_1', '#40dba7'],
  ['1_NA', '#FFFFFF'],
  ['2_NA', '#FFFFFF'],
  ['3_NA', '#FFFFFF']
];

var opacity_pal = [
  ['1_3', 0.7],
  ['2_3', 0.7],
  ['3_3', 0.7],
  ['1_2', 0.7],
  ['2_2', 0.7],
  ['3_2', 0.7],
  ['1_1', 0.7],
  ['2_1', 0.7],
  ['3_1', 0.7],
  ['1_NA', 0],
  ['2_NA', 0],
  ['3_NA', 0],
  ['NA_1', 0],
  ['NA_2', 0],
  ['NA_3', 0],
  ['NA_NA', 0]
];

function to_dict(palette) {
  var dict = {};
  
  for(var i = 0; i < palette.length; i++) {
    dict[palette[i][0]] = palette[i][1]
  }
  
  return dict;
}

// Returns a layer with all of the census tracts colored correctly to represent the data.
function get_vis_params(id, highlighted_tract) {
  
  return {
    polygonFillColor: {
      property: id,
      defaultValue: '#FFFFFF',
      categories: palette
    },
    
    polygonStrokeWidth: {
      property: "GEOID",
      defaultValue: 0.5,
      categories: [[highlighted_tract, 2]]
    },
    
    opacity: {
      property: id,
      defaultValue: 0.7,
      categories: opacity_pal
    }
  }
}

var tract_data = {
  "Degree of Greenness and Displacement Risk" : {
    id : "ne",
    palette: color_pal,
    info : "Degree of greenness compared to level of displacement risk in 2019 (from Estimated Displacement Risk model) at the census tract level."
  },
  "Degree of Greenness and Social Vulnerability" : {
    id : "ns",
    palette: color_pal,
    info : "Degree of greenness compared to the CDC's 2018 Social Vulnerability Index at the census tract level."
  },
  "Degree of Greenness and Housing Price Trend" : {
    id : "nshp",
    palette: color_pal,
    info : "Degree of greenness compared to the yearly average increase in housing price (2000 - 2020) at the zip code level."
  },
  "Land Surface Temperature and Displacement Risk" : {
    id : "le",
    palette: color_pal,
    info : "Change in average land surface temperature compared to level of displacement risk in 2019 (from Estimated Displacement Risk model) at the census tract level."
  },
  "Land Surface Temperature and Social Vulnerability" : {
    id : "ls",
    palette: color_pal,
    info : "Change in average land surface temperature compared to the CDC's 2018 Social Vulnerability Index at the census tract level."
  },
  "Land Surface Temperature and Housing Price Trend" : {
    id : "lshp",
    palette: color_pal,
    info : "Change in average land surface temperature compared to the yearly average increase in housing price (2000 - 2020) at the zip code level."
  }
}

tracts.setVisParams(
  getVisParams("ns",color_pal)
)

function get_square(color) {
  return ui.Panel({
    style : {
      height: "16px",
      width: "16px",
      
      backgroundColor: color
    }
  })
}

function get_matrix(var1, var2, categories) {

  var category_dict = to_dict(categories);

  // This is the worst, least readable code I've ever written.
  return ui.Panel({
    widgets: [
  
      // Upper Container
      ui.Panel({
        
        widgets: [
          // Columns
          ui.Panel({
            widgets : [
              
              // Rows
              ui.Panel({
                widgets : [
                  get_square(category_dict["1_3"]),
                  get_square(category_dict["2_3"]),
                  get_square(category_dict["3_3"])
                ],
                layout: ui.Panel.Layout.flow("horizontal")
              }),
              ui.Panel({
                widgets : [
                  get_square(category_dict["1_2"]),
                  get_square(category_dict["2_2"]),
                  get_square(category_dict["3_2"])
                ],
                layout: ui.Panel.Layout.flow("horizontal")
              }),
              ui.Panel({
                widgets : [
                  get_square(category_dict["1_1"]),
                  get_square(category_dict["2_1"]),
                  get_square(category_dict["3_1"])
                ],
                layout: ui.Panel.Layout.flow("horizontal")
              })
            ],
            layout: ui.Panel.Layout.flow("vertical")
          }),
          
          // Right-side Label
          ui.Label({
            value: "↑ " + var2,
            style: legend_style.bivariate_label_right
          })
        ],
        
        style: legend_style.category_container,
        layout: ui.Panel.Layout.flow("horizontal")
      }),
      
      // Lower Label
      ui.Label({
        value: "→ " + var1,
        style: legend_style.bivariate_label_bottom
      })
    ],
    
    style: legend_style.category_container,
    layout: ui.Panel.Layout.flow("vertical")
  });
}

exports.tracts = tracts
exports.highlighting = highlighting
exports.data = tract_data

exports.get_vis_params = get_vis_params
exports.get_matrix = get_matrix

exports.var1 = var1
exports.var2 = var2